--- a/requirements.txt
+++ b/requirements.txt
@@ -5,7 +5,6 @@
 retrying!=1.3.0,>=1.2.3 # Apache-2.0
 jsonpath-rw-ext>=0.1.9 # Apache-2.0
 jsonschema!=2.5.0,<3.0.0,>=2.0.0 # MIT
-kafka-python<1.0.0,>=0.9.5 # Apache-2.0
 keystonemiddleware!=4.1.0,>=4.0.0 # Apache-2.0
 lxml>=2.3 # BSD
 msgpack-python>=0.4.0 # Apache-2.0
--- a/ceilometer/tests/unit/publisher/test_kafka_broker_publisher.py
+++ b/ceilometer/tests/unit/publisher/test_kafka_broker_publisher.py
@@ -15,13 +15,17 @@
 """Tests for ceilometer/publisher/kafka_broker.py
 """
 import datetime
+import testtools
 import uuid
 
 import mock
 from oslo_utils import netutils
 
 from ceilometer.event.storage import models as event
-from ceilometer.publisher import kafka_broker as kafka
+try:
+    from ceilometer.publisher import kafka_broker as kafka
+except ImportError:
+    kafka = mock.Mock()
 from ceilometer.publisher import messaging as msg_publisher
 from ceilometer import sample
 from ceilometer.tests import base as tests_base
@@ -97,6 +101,12 @@
         ),
     ]
 
+    try:
+        from ceilometer.publisher import kafka_broker as kafka
+    except ImportError:
+        kafka = None
+
+    @testtools.skipIf(kafka is None, "Kafka not avaliable, skipping")
     def test_publish(self):
         publisher = kafka.KafkaBrokerPublisher(netutils.urlsplit(
             'kafka://127.0.0.1:9092?topic=ceilometer'))
@@ -106,6 +116,7 @@
             self.assertEqual(5, len(fake_producer.send_messages.mock_calls))
             self.assertEqual(0, len(publisher.local_queue))
 
+    @testtools.skipIf(kafka is None, "Kafka not avaliable, skipping")
     def test_publish_without_options(self):
         publisher = kafka.KafkaBrokerPublisher(
             netutils.urlsplit('kafka://127.0.0.1:9092'))
@@ -115,6 +126,7 @@
             self.assertEqual(5, len(fake_producer.send_messages.mock_calls))
             self.assertEqual(0, len(publisher.local_queue))
 
+    @testtools.skipIf(kafka is None, "Kafka not avaliable, skipping")
     def test_publish_to_host_without_policy(self):
         publisher = kafka.KafkaBrokerPublisher(netutils.urlsplit(
             'kafka://127.0.0.1:9092?topic=ceilometer'))
@@ -124,6 +136,7 @@
             'kafka://127.0.0.1:9092?topic=ceilometer&policy=test'))
         self.assertEqual('default', publisher.policy)
 
+    @testtools.skipIf(kafka is None, "Kafka not avaliable, skipping")
     def test_publish_to_host_with_default_policy(self):
         publisher = kafka.KafkaBrokerPublisher(netutils.urlsplit(
             'kafka://127.0.0.1:9092?topic=ceilometer&policy=default'))
@@ -136,6 +149,7 @@
             self.assertEqual(100, len(fake_producer.send_messages.mock_calls))
             self.assertEqual(0, len(publisher.local_queue))
 
+    @testtools.skipIf(kafka is None, "Kafka not avaliable, skipping")
     def test_publish_to_host_with_drop_policy(self):
         publisher = kafka.KafkaBrokerPublisher(netutils.urlsplit(
             'kafka://127.0.0.1:9092?topic=ceilometer&policy=drop'))
@@ -146,6 +160,7 @@
             self.assertEqual(1, len(fake_producer.send_messages.mock_calls))
             self.assertEqual(0, len(publisher.local_queue))
 
+    @testtools.skipIf(kafka is None, "Kafka not avaliable, skipping")
     def test_publish_to_host_with_queue_policy(self):
         publisher = kafka.KafkaBrokerPublisher(netutils.urlsplit(
             'kafka://127.0.0.1:9092?topic=ceilometer&policy=queue'))
@@ -156,6 +171,7 @@
             self.assertEqual(1, len(fake_producer.send_messages.mock_calls))
             self.assertEqual(1, len(publisher.local_queue))
 
+    @testtools.skipIf(kafka is None, "Kafka not avaliable, skipping")
     def test_publish_to_down_host_with_default_queue_size(self):
         publisher = kafka.KafkaBrokerPublisher(netutils.urlsplit(
             'kafka://127.0.0.1:9092?topic=ceilometer&policy=queue'))
@@ -174,6 +190,7 @@
             self.assertEqual('test-1999',
                              publisher.local_queue[1023][2][0]['counter_name'])
 
+    @testtools.skipIf(kafka is None, "Kafka not avaliable, skipping")
     def test_publish_to_host_from_down_to_up_with_queue(self):
         publisher = kafka.KafkaBrokerPublisher(netutils.urlsplit(
             'kafka://127.0.0.1:9092?topic=ceilometer&policy=queue'))
@@ -193,6 +210,7 @@
             publisher.publish_samples(mock.MagicMock(), self.test_data)
             self.assertEqual(0, len(publisher.local_queue))
 
+    @testtools.skipIf(kafka is None, "Kafka not avaliable, skipping")
     def test_publish_event_with_default_policy(self):
         publisher = kafka.KafkaBrokerPublisher(
             netutils.urlsplit('kafka://127.0.0.1:9092?topic=ceilometer'))
